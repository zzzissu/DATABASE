SELECT * FROM emp;
-- 어제 이어서..
-- 사원 이름 중, a와 e가 포함된 사원을 조회
SELECT * 
FROM EMP 
WHERE ENAME LIKE '%A%' AND ENAME LIKE '%E%';

SELECT * FROM EMP WHERE COMM = NULL;
SELECT ENAME, SAL, SAL*12+COMM, COMM FROM EMP;
SELECT * FROM EMP WHERE COMM IS NULL;			-- NULL인 열 조회
SELECT * FROM EMP WHERE COMM IS NOT NULL;		-- NULL이 아닌 열 조회

-- 사수가 있는 사원 출력
SELECT * FROM EMP WHERE MGR IS NOT NULL;

-- 수당에서 0을 제외한 사원 조회
SELECT * FROM EMP WHERE COMM != 0 OR COMM IS NULL;
SELECT * FROM EMP WHERE NOT (COMM = 0 AND COMM IS NOT NULL);

-- 새로운 일차 시작
SELECT ENAME, UPPER(ENAME), LOWER(ENAME)  FROM EMP; 	-- UPPER(대문자로 변환) LOWER(소문자로 변환)
SELECT ENAME, INITCAP(ENAME) FROM EMP;					-- INITCAP(첫글자만 대문자로 변환(문자열을 찾거나 비교할 때 자주 사용))


SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION 													-- UNION: 집합 연산자
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT DEPTNO, EMPNO, SAL, ENAME FROM EMP WHERE DEPTNO = 20;	-- 데이터 유형이 같아야 함. 순서 상관 X

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10
UNION
SELECT SAL, JOB, DEPTNO, SAL FROM EMP WHERE DEPTNO = 20;		-- 열의 개수와 데이터 유형이 같아야 함.


SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP
MINUS													-- MINUS: 차집합(~인것을 제외)
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP
EXCEPT													-- EXCEPT: 차집합
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10;


SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP
INTERSECT												-- INTERSECT: 교집합
SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP WHERE DEPTNO = 10; 


SELECT ENAME, LENGTH(ENAME) FROM EMP;					-- LENGTH: 문자열 길이 구하기


-- 이름의 글자 수가 5글자 이상인 사원 출력
SELECT * FROM EMP WHERE LENGTH(ENAME) >= 5;


SELECT LENGTH('오라클'), LENGTHB('오라클') FROM DUAL;		-- LENGTH: 문자 길이, LENGTHB: 바이트 크기


-- 문자열 일부를 추출 SUBSTR 함수
SELECT JOB,
SUBSTR(JOB, 1, 2),	-- 1번째 부터 글자 2개 출력
SUBSTR(JOB, 3, 2),	-- 3번째 부터 글자 2개 출력
SUBSTR(JOB, 5)		-- 5번째 부터 끝까지
FROM EMP;

-- SUBSTR함수를 사용해서 모든 사원의 이름을 세번째부터 출력
SELECT SUBSTR(ENAME, 3) FROM EMP;

-- 특정문자 위치를 찾는 INSTR함수(처음 찾은 글자만 출력, 값이 없으면 0을 반환)
SELECT INSTR('HELLO, ORACLE!', 'L') AS INSTR1,			-- 전체에서 찾기
		INSTR('HELLO, ORACLE!', 'L', 5) AS INSTR2,		-- 5번째 문자부터 찾기
		INSTR('HELLO, ORACLE!', 'L', 2, 2) AS INSTR3	-- 2번째 문자부터 2번째로 나오는 문자 찾기
FROM DUAL;

-- 사원이름 중, 'S'가 포함된 사원의 정보 출력
SELECT * FROM EMP WHERE INSTR(ENAME, 'S') > 0;
SELECT * FROM EMP WHERE ENAME LIKE '%S%';

-- 문자변환 REPLACE 함수
SELECT '010-1234-5678' AS REPLACE1,
	REPLACE ('010-1234-5678', '-', ' ') AS REPLACE2,	-- REPLACE(문자열, 찾는 문자(필수), 대체 할 문자)
	REPLACE ('010-1234-5678', '-') AS REPLACE3			-- REPLACE(문자열, 찾는 문자(제거할 문자))
FROM DUAL;

-- 빈 공간 채우는 LPAD, RPAD 함수
SELECT 'ORACLE',
	LPAD('ORACLE', 10, '#') AS LPAD1,					-- L/RPAD(문자열, 전체 자리 수, 빈자리 채울 문자)
	RPAD('ORACLE', 10, '*') AS RPAD1,
	LPAD('ORACLE', 10) AS LPAD2,
	RPAD('ORACLE', 10) AS RPAD2
FROM DUAL;

-- 주민번호, 전화번호의 끝 7자리, 4자리를 '*'처리
SELECT '240404-1234567', '010-5555-8888',
	RPAD('240404-', 14,'*') AS JB,
	RPAD('010-5555-', 13, '*') AS PB
FROM DUAL;

-- 특정문자를 지우는 TRIM, LTRIM, RTRIM 함수
SELECT '[' || TRIM(' __ORACLE__ ') || ']' AS TRIM,		-- 공백을 삭제(앞, 뒤)
	'[' || TRIM(LEADING FROM ' __ORACLE__ ') || ']' AS TRIM_LEADING,		-- 왼쪽 공백 삭제
	'[' || TRIM(TRAILING FROM ' __ORACLE__ ') || ']' AS TRIM_TRAILING,		-- 오른쪽 공백 삭제
	'[' || TRIM(BOTH FROM ' __ORACLE__ ') || ']' AS TRIM_BOTH				-- 특정 구간 삭제
FROM DUAL;

-- 반올림 함수 ROUND
SELECT ROUND(1324.5678),							-- 소수점 반올림
		ROUND(1234.5678, 0),						-- 0번째(까지) 소수점 반올림
		ROUND(1234.56789, 1),						-- 1번째(까지) 소수점 반올림
		ROUND(1234.5678, -1),						-- 자연수 첫 째자리 반올림
		ROUND(1234.5678, -2)
FROM DUAL;

-- 버림하는 함수 TRUNC
SELECT TRUNC(1234.5678),
		TRUNC(134.5678, 0),
		TRUNC(1234.5678, 1),
		TRUNC(1234.5678, -1) 
FROM DUAL;

-- 나머지를 구하는 함수 MOD
SELECT MOD(15, 2), MOD(10, 2), MOD(11, 2)
FROM DUAL;

-- 각 사원별 시급을 계산하여 부서번호, 사원이름, 시급을 출력
/* 1. 한달 근무일시 20일, 하루 근무 시간은 8시간
 * 2. 부서별로 오름차순으로 정렬
 * 3. 시급은 소수 2째 자리까지 출력
 * 4. 시급이 높은순으로 출력 */
SELECT * FROM EMP;
SELECT DEPTNO, ENAME, ROUND((SAL / 20 / 8), 1) AS TIMESAL
FROM EMP
ORDER BY DEPTNO, TIMESAL DESC;

-- 날짜 함수
SELECT SYSDATE AS NOW,
		SYSDATE -1 AS YESTERDAY,
		SYSDATE +1 AS TOMOROW
FROM DUAL;

SELECT SYSDATE, ADD_MONTHS(SYSDATE, 3)		-- 월 추가 
FROM DUAL;


-- 입사 10주년이 되는 사원들 출력(사원번호, 사원이름, 입사일, 10주년 날짜)
SELECT EMPNO, ENAME, HIREDATE, ADD_MONTHS(HIREDATE , 120) AS "10TH"
FROM EMP;

-- 두 날짜간의 개월 차
SELECT  EMPNO, ENAME, HIREDATE, SYSDATE,
		MONTHS_BETWEEN(HIREDATE, SYSDATE) AS MONTHS1,
		MONTHS_BETWEEN(SYSDATE, HIREDATE) AS MONTHS2,
		TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE)) AS MONTHS3 
FROM EMP;

-- 요일, 마지막 날짜
SELECT SYSDATE,
	NEXT_DAY(SYSDATE, '월요일'),
	LAST_DAY(SYSDATE)				-- 월 마지막 날짜 구하기
FROM DUAL;

SELECT SYSDATE,
	ROUND(SYSDATE, 'CC') AS FORMAT_CC,		-- 두 숫자를 기준으로 50 아래면 
	ROUND(SYSDATE, 'YYYY') AS FORMAT_YYYY
FROM DUAL;

-- 형 변환 함수
SELECT EMPNO, ENAME, EMPNO + '500' FROM EMP WHERE ENAME = 'SCOTT';
--SELECT 'ABCD' + EMPNO, EMPNO FROM EMP WHERE ENAME = 'SCOTT';			-- 문자는 형 변환이 어려움


-- 암묵적 형변환(컴파일이 자동 변환) <--> 명시적 형변환(사용자가 변환)
/* TO_CHAR: 숫자 또는 날짜 데이터를 문자 데이터로 변환
 * TO_NUMBER: 문자 또는 날짜 데이터를 숫자 데이터로 변환
 * TO_DATE: 문자또는 숫자 데이터를 날짜 데이터로 변환
 * */

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS "현재 날짜 시간"
FROM DUAL;
-- CC: 세기, YYYY: 연도, YY:연도(2), MM: 월, MON: 월(약어), MPNTH: 월(전체), DD: 일, DDD: 365일, DY: 요일(약어), DAY(풀어), W: 주(WEEK)
-- HH24: 24시간, HH/HH12: 12시간, M1: 분, SS: 초, AM/PM/A.M/P.M: 오전, 오후
SELECT SYSDATE,
	TO_CHAR(SYSDATE, 'MM') AS MM,
	TO_CHAR(SYSDATE, 'MON') AS MON,
	TO_CHAR(SYSDATE, 'MONTH') AS MONTH,
	TO_CHAR(SYSDATE, 'DD') AS DD,
	TO_CHAR(SYSDATE, 'DY') AS DY,
	TO_CHAR(SYSDATE, 'DAY') AS DAY
FROM DUAL;

SELECT SYSDATE,
	TO_CHAR(SYSDATE, 'MM') AS MM,
	TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = KOREAN') AS MON_K,
	TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = JAPANESE') AS MONTH_J,
	TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = ENGLISH') AS DD_E,
	TO_CHAR(SYSDATE, 'MONTH', 'NLS_DATE_LANGUAGE = KOREAN') AS DY_K,
	TO_CHAR(SYSDATE, 'MONTH', 'NLS_DATE_LANGUAGE = ENGLISH') AS DAY_E
FROM DUAL;

SELECT SYSDATE,
	TO_CHAR(SYSDATE, 'HH24:MI:SS') AS HH24HISS,
	TO_CHAR(SYSDATE, 'HH24:MI:SS AM') AS HH24HISS_AM,
	TO_CHAR(SYSDATE, 'HH:MI,SS P.M.') AS HH24HISS_PM
FROM DUAL;

SELECT TO_DATE('2019-04-04', 'YYYY-MM-DD') AS TODATE,
		TO_DATE('20100301', 'YYYY-MM-DD') AS TODATE2
FROM DUAL;

-- 1981년 12월 1일 이후에 입사한 사원정보 출력
SELECT *
FROM EMP
WHERE HIREDATE > TO_DATE('19811201', 'YYYY-MM-DD');


